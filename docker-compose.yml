version: '3.8'



services:

  app:
    build:
      context: ./docker/php
    volumes:
      - ./:/var/www/html
    depends_on:
      - mysql
      - redis
      - rabbitmq
    networks:
      - app-network

  nginx:
    build:
      context: ./docker/nginx
    ports:
      - "8022:80"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    ports:
      - "4406:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network

  redis:
    image: redis:7.0.10
    ports:
      - "6380:6379"
    networks:
      - app-network
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/var/lib/redis

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    networks:
      - app-network

  node:
    build:
      context: ./docker/node
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data: ~
  redis_data: ~